FROM rust:latest AS chef
# We only pay the installation cost once,
# it will be cached from the second build onwards
RUN cargo install cargo-chef

WORKDIR app

FROM chef AS planner
COPY . .
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder

COPY --from=planner /app/recipe.json recipe.json
# Build dependencies - this is the caching Docker layer!
RUN cargo chef cook --release --recipe-path recipe.json

# Install Protobuf compiler
RUN apt-get update && \
    apt-get install -y protobuf-compiler

# Copy Protobuf files
# COPY abi_discovery/proto/my_proto.proto .

# Build application
COPY . .
RUN cd settings && cargo install --path .
RUN cd abi_discovery && cargo install --path .

# We do not need the Rust toolchain to run the binary!
FROM gcr.io/distroless/cc-debian11
COPY --from=builder /usr/local/cargo/bin/ /usr/local/bin

# Run the binary
CMD ["settings", \
    "--google_service_account=$test_account", \
    "--mq_url=$amqp://guest:guest@localhost:567", \
    "--infura_token=$infura_token", \
    "--cloud_bucket=$cloud_bucket", \
    "--local_storage=$local_storage", \
    "--redis_uri=$redis_uri", \
    "--infura_mainnet_rpc=$infura_mainnet_rpc", \
    "--etherscan_api_key=$etherscan_api_key", \
    "--infura_mainnet_ws=$infura_mainnet_rpc", \
    "--local_mainnet_rpc=$local_mainnet_rpc", \
    "--local_mainnet_ws=$local_mainnet_rpc" , \
    "--mongodb_uri=$mongodb_uri", \
    "--mongodb_engine_db=$mongodb_engine_db"]





